# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-01-10 13:04
from __future__ import unicode_literals

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ubigeo', '0001_initial'),
        ('item', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Agricola',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cantidad', models.PositiveIntegerField(help_text='Nro de unidades de producto, producidas por año', verbose_name='Cantidad')),
                ('promedio_precio_venta', models.DecimalField(decimal_places=2, help_text='Promedio de precio de venta del producto', max_digits=8, validators=(django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100000.00'))), verbose_name='Promedio PV')),
                ('promedio_precio_real_venta', models.DecimalField(decimal_places=2, help_text='Promedio de precio de venta del producto, en el mercado local', max_digits=8, validators=(django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100000.00'))), verbose_name='Promedio PRV')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'producto agricola',
                'verbose_name_plural': 'productos agricolas',
            },
        ),
        migrations.CreateModel(
            name='FuenteTrabajo',
            fields=[
                ('centro_poblado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ubigeo.CentroPoblado', verbose_name='Centro poblado')),
                ('casa_dep', models.DecimalField(decimal_places=2, help_text='Porcentaje de habitantes que trabajan en su casa', max_digits=5, validators=(django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100.00'))), verbose_name='Casa')),
                ('campo_dep', models.DecimalField(decimal_places=2, help_text='Porcentaje de habitantes que trabajan en el campo', max_digits=5, validators=(django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100.00'))), verbose_name='Campo')),
                ('independiente_dep', models.DecimalField(decimal_places=2, help_text='Porcentaje de habitantes que trabajan de forma independiente', max_digits=5, validators=(django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100.00'))), verbose_name='Independiente')),
                ('publico_dep', models.DecimalField(decimal_places=2, help_text='Porcentaje de habitantes que trabajan en el sector público', max_digits=5, validators=(django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100.00'))), verbose_name='Sector Público')),
                ('privado_dep', models.DecimalField(decimal_places=2, help_text='Porcentaje de habitantes que trabajan en el sector privado', max_digits=5, validators=(django.core.validators.MinValueValidator(Decimal('0')), django.core.validators.MaxValueValidator(Decimal('100.00'))), verbose_name='Sector Privado')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingreso',
            fields=[
                ('centro_poblado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ubigeo.CentroPoblado', verbose_name='Centro poblado')),
                ('nro_habitantes', models.PositiveIntegerField(help_text='Total nro de habitantes del centro poblado', verbose_name='Nro de habitantes')),
                ('nro_familias', models.PositiveIntegerField(help_text='Total nro de familias del centro poblado', verbose_name='Nro de familias')),
                ('m200', models.PositiveIntegerField(help_text='Nro de familias con ingresos económicos iguales o menores a 200 Soles al mes', verbose_name='Igual ó menor a 200 Soles')),
                ('m201_499', models.PositiveIntegerField(help_text='Nro de familias con ingresos económicos de 201 a 499 Soles al mes', verbose_name='De 201 a 499 Soles')),
                ('m501_999', models.PositiveIntegerField(help_text='Nro de familias con ingresos económicos de 500 a 999 Soles al mes', verbose_name='De 500 a 999 Soles')),
                ('m1000', models.PositiveIntegerField(help_text='Nro de familias con ingresos económicos iguales o mayores a 1000 Soles al mes', verbose_name='Igual ó mayor a 1000 Soles')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Oficio',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('porcentaje', models.DecimalField(decimal_places=2, help_text='Porcentaje de habitantes que ejercen la ocupación / oficio / profesión', max_digits=5, validators=(django.core.validators.MinValueValidator(Decimal('0.01')), django.core.validators.MaxValueValidator(Decimal('100.00'))), verbose_name='Porcentaje')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'oficio',
                'verbose_name_plural': 'oficios',
            },
        ),
        migrations.CreateModel(
            name='Pecuario',
            fields=[
                ('centro_poblado', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='ubigeo.CentroPoblado', verbose_name='Centro poblado')),
                ('n_aves', models.PositiveIntegerField(help_text='Nro de aves producidas por año', verbose_name='Aves')),
                ('n_cuyes', models.PositiveIntegerField(help_text='Nro de cuyes producidos por año', verbose_name='Cuyes')),
                ('n_ovejas', models.PositiveIntegerField(help_text='Nro de ovejas producias por año', verbose_name='Ovejas')),
                ('n_porcinos', models.PositiveIntegerField(help_text='Nro de porcinos producidos por año', verbose_name='Porcinos')),
                ('n_vacunos', models.PositiveIntegerField(help_text='Nro de porcinos producidos por año', verbose_name='Vacunos')),
                ('creado', models.DateTimeField(auto_now_add=True)),
                ('modificado', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'producto pecuario',
                'verbose_name_plural': 'productos pecuarios',
            },
        ),
        migrations.AddField(
            model_name='oficio',
            name='centro_poblado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ubigeo.CentroPoblado', verbose_name='Centro poblado'),
        ),
        migrations.AddField(
            model_name='oficio',
            name='tipo_oficio',
            field=models.ForeignKey(help_text='Tipo de ocupación / oficio / profesión', on_delete=django.db.models.deletion.CASCADE, to='item.TipoOficio', verbose_name='Ocupación'),
        ),
        migrations.AddField(
            model_name='agricola',
            name='centro_poblado',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ubigeo.CentroPoblado', verbose_name='Centro poblado'),
        ),
        migrations.AddField(
            model_name='agricola',
            name='destino',
            field=models.ForeignKey(help_text='Destino / finalidad del producto', on_delete=django.db.models.deletion.CASCADE, to='item.TipoProductoDestino', verbose_name='Destino'),
        ),
        migrations.AddField(
            model_name='agricola',
            name='producto',
            field=models.ForeignKey(help_text='Tipo de producto agricola', on_delete=django.db.models.deletion.CASCADE, to='item.TipoProductoAgricola', verbose_name='Producto'),
        ),
        migrations.AddField(
            model_name='agricola',
            name='unidad_medida',
            field=models.ForeignKey(help_text='Unidad de medida del producto', on_delete=django.db.models.deletion.CASCADE, to='item.TipoUnidadMedida', verbose_name='Unidad medida'),
        ),
        migrations.AlterUniqueTogether(
            name='oficio',
            unique_together=set([('centro_poblado', 'tipo_oficio')]),
        ),
        migrations.AlterUniqueTogether(
            name='agricola',
            unique_together=set([('centro_poblado', 'producto')]),
        ),
    ]
